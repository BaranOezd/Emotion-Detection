{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seyit\\\\Desktop\\\\Emotion Analysis\\\\frontend2\\\\src\\\\components\\\\EmotionAnalysisVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmotionAnalysisVisualization = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [selectedSentence, setSelectedSentence] = useState(null);\n  const [inputText, setInputText] = useState(\"\");\n  const chartRef = useRef(null);\n  const steamGraphRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Load CSV data initially (if needed)\n  useEffect(() => {\n    d3.csv(\"/backend/emotion_analysis.csv\").then(setData);\n  }, []);\n\n  // Define emotion colors mapping\n  const emotionColors = {\n    \"Joy\": \"#FFEB3B\",\n    \"Sadness\": \"#2196F3\",\n    \"Fear\": \"#9C27B0\",\n    \"Disgust\": \"#4CAF50\",\n    \"Anger\": \"#F44336\",\n    \"Surprise\": \"#FFB322\",\n    \"Neutral\": \"#9E9E9E\"\n  };\n\n  // Get emotion keys (excluding Sentence)\n  const emotions = data.length > 0 ? Object.keys(data[0]).filter(key => key !== \"Sentence\") : [];\n\n  // Redraw graphs when selectedSentence or data change\n  useEffect(() => {\n    if (selectedSentence) drawBarChart();\n  }, [selectedSentence]);\n  useEffect(() => {\n    if (data.length > 0) drawSteamGraph();\n  }, [data]);\n\n  // Recalculate and redraw graphs on window resize\n  useEffect(() => {\n    const handleResize = () => {\n      if (data.length > 0) {\n        drawSteamGraph();\n        if (selectedSentence) drawBarChart();\n      }\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [data, selectedSentence]);\n\n  // Toggle line visibility in the steam graph legend\n  const handleLegendClick = emotion => {\n    const line = d3.select(`.line-${emotion}`);\n    const currentOpacity = line.style(\"opacity\");\n    line.style(\"opacity\", currentOpacity === \"1\" ? 0.1 : 1);\n  };\n  const drawBarChart = () => {\n    const chartDiv = d3.select(chartRef.current);\n    chartDiv.html(\"\");\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 50\n    };\n    const width = chartDiv.node().clientWidth - margin.left - margin.right;\n    const height = chartDiv.node().clientHeight - margin.top - margin.bottom;\n    const svg = chartDiv.append(\"svg\").attr(\"viewBox\", `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`).attr(\"preserveAspectRatio\", \"xMidYMid meet\").style(\"width\", \"100%\").style(\"height\", \"100%\").append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    const x = d3.scaleBand().domain(emotions).range([0, width]).padding(0.2);\n    const y = d3.scaleLinear().domain([0, 1]).nice().range([height, 0]);\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(x));\n    svg.append(\"g\").call(d3.axisLeft(y).ticks(5).tickFormat(d => `${d * 100}%`));\n    const emotionScores = emotions.map(emotion => ({\n      emotion,\n      score: +selectedSentence[emotion] || 0\n    }));\n    svg.selectAll(\".bar\").data(emotionScores).enter().append(\"rect\").attr(\"x\", d => x(d.emotion)).attr(\"y\", d => y(d.score)).attr(\"width\", x.bandwidth()).attr(\"height\", d => height - y(d.score)).style(\"fill\", d => emotionColors[d.emotion]);\n    svg.selectAll(\".label\").data(emotionScores).enter().append(\"text\").attr(\"x\", d => x(d.emotion) + x.bandwidth() / 2).attr(\"y\", d => y(d.score) - 5).attr(\"text-anchor\", \"middle\").style(\"font-size\", \"12px\").text(d => d.score > 0 ? `${Math.round(d.score * 100)}%` : \"\");\n  };\n  const drawSteamGraph = () => {\n    const container = d3.select(steamGraphRef.current);\n    container.html(\"\");\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 40,\n      left: 50\n    };\n    const width = container.node().clientWidth - margin.left - margin.right;\n    const height = container.node().clientHeight - margin.top - margin.bottom;\n    const svg = container.append(\"svg\").attr(\"viewBox\", `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`).attr(\"preserveAspectRatio\", \"xMidYMid meet\").style(\"width\", \"100%\").style(\"height\", \"100%\").append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    const x = d3.scaleLinear().domain([1, data.length]).range([0, width]);\n    const y = d3.scaleLinear().domain([0, 1]).nice().range([height, 0]);\n    svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(x));\n    svg.append(\"g\").call(d3.axisLeft(y).ticks(5).tickFormat(d3.format(\".1f\")));\n    emotions.forEach(emotion => {\n      const line = d3.line().x((_, i) => x(i + 1)).y(d => y(+d[emotion])).curve(d3.curveBasis);\n      svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", emotionColors[emotion]).attr(\"stroke-width\", 2).attr(\"d\", line).attr(\"class\", `line-${emotion}`).style(\"opacity\", 1);\n    });\n\n    // Add legend\n    const legend = svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", `translate(0,${height + 20})`);\n    emotions.forEach((emotion, i) => {\n      const legendItem = legend.append(\"g\").attr(\"transform\", `translate(${i * 100}, 0)`).style(\"cursor\", \"pointer\").on(\"click\", () => handleLegendClick(emotion));\n      legendItem.append(\"rect\").attr(\"width\", 18).attr(\"height\", 18).attr(\"fill\", emotionColors[emotion]);\n      legendItem.append(\"text\").attr(\"x\", 24).attr(\"y\", 9).attr(\"dy\", \"0.35em\").style(\"font-size\", \"12px\").text(emotion);\n    });\n  };\n\n  // New handleAnalyze that calls the Flask API for analysis\n  const handleAnalyze = () => {\n    fetch(\"/analyze\", {\n      // Proxy will forward to Flask\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: inputText\n      })\n    }).then(res => res.json()).then(data => setData(data.results)).catch(error => console.error(\"Error analyzing text:\", error));\n  };\n\n  // New handleFileUpload that calls the Flask API for file uploads\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    fetch(\"/upload\", {\n      // Flask handles this request\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json()).then(data => setData(data.results)).catch(error => console.error(\"Error uploading file:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        html, body, #root {\n          margin: 0;\n          padding: 0;\n          height: 100%;\n          overflow: hidden;\n        }\n        .container {\n          display: flex;\n          width: 100vw;\n          height: 100vh;\n        }\n        .left-panel {\n          width: 30%;\n          padding: 10px;\n          border-right: 1px solid #ccc;\n          display: flex;\n          flex-direction: column;\n          box-sizing: border-box;\n        }\n        .input-controls {\n          flex: 0 0 auto;\n          margin-bottom: 10px;\n        }\n        .sentence-list {\n          flex: 1;\n          overflow: auto;\n        }\n        .sentence-list-item {\n          cursor: pointer;\n          padding: 4px;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n        .sentence-list-item:hover { color: #0056b3; }\n        .sentence-list-item.clicked { color: #c00; }\n        .right-panel {\n          width: 70%;\n          padding: 10px;\n          display: flex;\n          flex-direction: column;\n          box-sizing: border-box;\n        }\n        .graph-section {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          margin-bottom: 10px;\n        }\n        .graph-section:last-child {\n          margin-bottom: 0;\n        }\n        .graph-section h3 {\n          margin: 0 0 5px 0;\n          font-size: 16px;\n        }\n        .graph-container {\n          flex: 1;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputText,\n            onChange: e => setInputText(e.target.value),\n            placeholder: \"Enter text\",\n            style: {\n              width: \"100%\",\n              height: \"80px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAnalyze,\n            children: \"Analyze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => fileInputRef.current.click(),\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".txt\",\n            ref: fileInputRef,\n            style: {\n              display: \"none\"\n            },\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sentences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sentence-list\",\n          children: data.map((d, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `sentence-list-item ${selectedSentence === d ? \"clicked\" : \"\"}`,\n            onClick: () => setSelectedSentence(d),\n            children: d.Sentence\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Steam Graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"steamGraph\",\n            ref: steamGraphRef,\n            className: \"graph-container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"chart\",\n            ref: chartRef,\n            className: \"graph-container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(EmotionAnalysisVisualization, \"GjvUqig+RD8Zpo0Gi7nYSuzc/wk=\");\n_c = EmotionAnalysisVisualization;\nexport default EmotionAnalysisVisualization;\nvar _c;\n$RefreshReg$(_c, \"EmotionAnalysisVisualization\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","jsxDEV","_jsxDEV","EmotionAnalysisVisualization","_s","data","setData","selectedSentence","setSelectedSentence","inputText","setInputText","chartRef","steamGraphRef","fileInputRef","csv","then","emotionColors","emotions","length","Object","keys","filter","key","drawBarChart","drawSteamGraph","handleResize","window","addEventListener","removeEventListener","handleLegendClick","emotion","line","select","currentOpacity","style","chartDiv","current","html","margin","top","right","bottom","left","width","node","clientWidth","height","clientHeight","svg","append","attr","x","scaleBand","domain","range","padding","y","scaleLinear","nice","call","axisBottom","axisLeft","ticks","tickFormat","d","emotionScores","map","score","selectAll","enter","bandwidth","text","Math","round","container","format","forEach","_","i","curve","curveBasis","datum","legend","legendItem","on","handleAnalyze","fetch","method","headers","body","JSON","stringify","res","json","results","catch","error","console","handleFileUpload","e","file","target","files","formData","FormData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","placeholder","onClick","click","type","accept","ref","display","Sentence","id","_c","$RefreshReg$"],"sources":["C:/Users/seyit/Desktop/Emotion Analysis/frontend2/src/components/EmotionAnalysisVisualization.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst EmotionAnalysisVisualization = () => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedSentence, setSelectedSentence] = useState(null);\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const chartRef = useRef(null);\r\n  const steamGraphRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Load CSV data initially (if needed)\r\n  useEffect(() => {\r\n    d3.csv(\"/backend/emotion_analysis.csv\").then(setData);\r\n  }, []);\r\n\r\n  // Define emotion colors mapping\r\n  const emotionColors = {\r\n    \"Joy\": \"#FFEB3B\",\r\n    \"Sadness\": \"#2196F3\",\r\n    \"Fear\": \"#9C27B0\",\r\n    \"Disgust\": \"#4CAF50\",\r\n    \"Anger\": \"#F44336\",\r\n    \"Surprise\": \"#FFB322\",\r\n    \"Neutral\": \"#9E9E9E\"\r\n  };\r\n\r\n  // Get emotion keys (excluding Sentence)\r\n  const emotions = data.length > 0 \r\n    ? Object.keys(data[0]).filter(key => key !== \"Sentence\")\r\n    : [];\r\n\r\n  // Redraw graphs when selectedSentence or data change\r\n  useEffect(() => {\r\n    if (selectedSentence) drawBarChart();\r\n  }, [selectedSentence]);\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0) drawSteamGraph();\r\n  }, [data]);\r\n\r\n  // Recalculate and redraw graphs on window resize\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (data.length > 0) {\r\n        drawSteamGraph();\r\n        if (selectedSentence) drawBarChart();\r\n      }\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [data, selectedSentence]);\r\n\r\n  // Toggle line visibility in the steam graph legend\r\n  const handleLegendClick = (emotion) => {\r\n    const line = d3.select(`.line-${emotion}`);\r\n    const currentOpacity = line.style(\"opacity\");\r\n    line.style(\"opacity\", currentOpacity === \"1\" ? 0.1 : 1);\r\n  };\r\n\r\n  const drawBarChart = () => {\r\n    const chartDiv = d3.select(chartRef.current);\r\n    chartDiv.html(\"\");\r\n\r\n    const margin = { top: 20, right: 30, bottom: 40, left: 50 };\r\n    const width = chartDiv.node().clientWidth - margin.left - margin.right;\r\n    const height = chartDiv.node().clientHeight - margin.top - margin.bottom;\r\n\r\n    const svg = chartDiv.append(\"svg\")\r\n      .attr(\"viewBox\", `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`)\r\n      .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\r\n      .style(\"width\", \"100%\")\r\n      .style(\"height\", \"100%\")\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n    const x = d3.scaleBand().domain(emotions).range([0, width]).padding(0.2);\r\n    const y = d3.scaleLinear().domain([0, 1]).nice().range([height, 0]);\r\n\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(0,${height})`)\r\n      .call(d3.axisBottom(x));\r\n\r\n    svg.append(\"g\")\r\n      .call(d3.axisLeft(y).ticks(5).tickFormat(d => `${d * 100}%`));\r\n\r\n    const emotionScores = emotions.map(emotion => ({\r\n      emotion,\r\n      score: +selectedSentence[emotion] || 0\r\n    }));\r\n\r\n    svg.selectAll(\".bar\")\r\n      .data(emotionScores)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => x(d.emotion))\r\n      .attr(\"y\", d => y(d.score))\r\n      .attr(\"width\", x.bandwidth())\r\n      .attr(\"height\", d => height - y(d.score))\r\n      .style(\"fill\", d => emotionColors[d.emotion]);\r\n\r\n    svg.selectAll(\".label\")\r\n      .data(emotionScores)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", d => x(d.emotion) + x.bandwidth() / 2)\r\n      .attr(\"y\", d => y(d.score) - 5)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .style(\"font-size\", \"12px\")\r\n      .text(d => (d.score > 0 ? `${Math.round(d.score * 100)}%` : \"\"));\r\n  };\r\n\r\n  const drawSteamGraph = () => {\r\n    const container = d3.select(steamGraphRef.current);\r\n    container.html(\"\");\r\n\r\n    const margin = { top: 20, right: 30, bottom: 40, left: 50 };\r\n    const width = container.node().clientWidth - margin.left - margin.right;\r\n    const height = container.node().clientHeight - margin.top - margin.bottom;\r\n\r\n    const svg = container.append(\"svg\")\r\n      .attr(\"viewBox\", `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`)\r\n      .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\r\n      .style(\"width\", \"100%\")\r\n      .style(\"height\", \"100%\")\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n    const x = d3.scaleLinear().domain([1, data.length]).range([0, width]);\r\n    const y = d3.scaleLinear().domain([0, 1]).nice().range([height, 0]);\r\n\r\n    svg.append(\"g\")\r\n      .attr(\"transform\", `translate(0,${height})`)\r\n      .call(d3.axisBottom(x));\r\n\r\n    svg.append(\"g\")\r\n      .call(d3.axisLeft(y).ticks(5).tickFormat(d3.format(\".1f\")));\r\n\r\n    emotions.forEach(emotion => {\r\n      const line = d3.line()\r\n        .x((_, i) => x(i + 1))\r\n        .y(d => y(+d[emotion]))\r\n        .curve(d3.curveBasis);\r\n\r\n      svg.append(\"path\")\r\n        .datum(data)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", emotionColors[emotion])\r\n        .attr(\"stroke-width\", 2)\r\n        .attr(\"d\", line)\r\n        .attr(\"class\", `line-${emotion}`)\r\n        .style(\"opacity\", 1);\r\n    });\r\n\r\n    // Add legend\r\n    const legend = svg.append(\"g\")\r\n      .attr(\"class\", \"legend\")\r\n      .attr(\"transform\", `translate(0,${height + 20})`);\r\n\r\n    emotions.forEach((emotion, i) => {\r\n      const legendItem = legend.append(\"g\")\r\n        .attr(\"transform\", `translate(${i * 100}, 0)`)\r\n        .style(\"cursor\", \"pointer\")\r\n        .on(\"click\", () => handleLegendClick(emotion));\r\n\r\n      legendItem.append(\"rect\")\r\n        .attr(\"width\", 18)\r\n        .attr(\"height\", 18)\r\n        .attr(\"fill\", emotionColors[emotion]);\r\n\r\n      legendItem.append(\"text\")\r\n        .attr(\"x\", 24)\r\n        .attr(\"y\", 9)\r\n        .attr(\"dy\", \"0.35em\")\r\n        .style(\"font-size\", \"12px\")\r\n        .text(emotion);\r\n    });\r\n  };\r\n\r\n  // New handleAnalyze that calls the Flask API for analysis\r\n  const handleAnalyze = () => {\r\n    fetch(\"/analyze\", {  // Proxy will forward to Flask\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ text: inputText })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => setData(data.results))\r\n      .catch(error => console.error(\"Error analyzing text:\", error));\r\n  };\r\n\r\n  // New handleFileUpload that calls the Flask API for file uploads\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    fetch(\"/upload\", {  // Flask handles this request\r\n      method: \"POST\",\r\n      body: formData\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => setData(data.results))\r\n      .catch(error => console.error(\"Error uploading file:\", error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <style>{`\r\n        html, body, #root {\r\n          margin: 0;\r\n          padding: 0;\r\n          height: 100%;\r\n          overflow: hidden;\r\n        }\r\n        .container {\r\n          display: flex;\r\n          width: 100vw;\r\n          height: 100vh;\r\n        }\r\n        .left-panel {\r\n          width: 30%;\r\n          padding: 10px;\r\n          border-right: 1px solid #ccc;\r\n          display: flex;\r\n          flex-direction: column;\r\n          box-sizing: border-box;\r\n        }\r\n        .input-controls {\r\n          flex: 0 0 auto;\r\n          margin-bottom: 10px;\r\n        }\r\n        .sentence-list {\r\n          flex: 1;\r\n          overflow: auto;\r\n        }\r\n        .sentence-list-item {\r\n          cursor: pointer;\r\n          padding: 4px;\r\n          white-space: nowrap;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n        }\r\n        .sentence-list-item:hover { color: #0056b3; }\r\n        .sentence-list-item.clicked { color: #c00; }\r\n        .right-panel {\r\n          width: 70%;\r\n          padding: 10px;\r\n          display: flex;\r\n          flex-direction: column;\r\n          box-sizing: border-box;\r\n        }\r\n        .graph-section {\r\n          flex: 1;\r\n          display: flex;\r\n          flex-direction: column;\r\n          margin-bottom: 10px;\r\n        }\r\n        .graph-section:last-child {\r\n          margin-bottom: 0;\r\n        }\r\n        .graph-section h3 {\r\n          margin: 0 0 5px 0;\r\n          font-size: 16px;\r\n        }\r\n        .graph-container {\r\n          flex: 1;\r\n        }\r\n      `}</style>\r\n      <div className=\"container\">\r\n        <div className=\"left-panel\">\r\n          <div className=\"input-controls\">\r\n            <textarea\r\n              value={inputText}\r\n              onChange={e => setInputText(e.target.value)}\r\n              placeholder=\"Enter text\"\r\n              style={{ width: \"100%\", height: \"80px\" }}\r\n            />\r\n            <button onClick={handleAnalyze}>Analyze</button>\r\n            <button onClick={() => fileInputRef.current.click()}>Upload</button>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".txt\"\r\n              ref={fileInputRef}\r\n              style={{ display: \"none\" }}\r\n              onChange={handleFileUpload}\r\n            />\r\n          </div>\r\n          <h3>Sentences</h3>\r\n          <div className=\"sentence-list\">\r\n            {data.map((d, i) => (\r\n              <div\r\n                key={i}\r\n                className={`sentence-list-item ${selectedSentence === d ? \"clicked\" : \"\"}`}\r\n                onClick={() => setSelectedSentence(d)}\r\n              >\r\n                {d.Sentence}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"right-panel\">\r\n          <div className=\"graph-section\">\r\n            <h3>Steam Graph</h3>\r\n            <div id=\"steamGraph\" ref={steamGraphRef} className=\"graph-container\"></div>\r\n          </div>\r\n          <div className=\"graph-section\">\r\n            <h3>Bar Chart</h3>\r\n            <div id=\"chart\" ref={chartRef} className=\"graph-container\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmotionAnalysisVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}